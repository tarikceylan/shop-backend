# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: product-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x

  # you can overwrite defaults here
  stage: dev
  region: eu-central-1

# you can add statements to the Lambda function's IAM Role here
#  iam:
#    role:
#      statements:
#        - Effect: "Allow"
#          Action:
#            - "s3:ListBucket"
#          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#        - Effect: "Allow"
#          Action:
#            - "s3:PutObject"
#          Resource:
#            Fn::Join:
#              - ""
#              - - "arn:aws:s3:::"
#                - "Ref" : "ServerlessDeploymentBucket"
#                - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  individually: true

functions:
  getProductsList:
    handler: api/getProductsList/getProductsList.handler
    events:
      - http:
          path: products
          method: get
          cors:
            origin: '*'
  getProductById:
    handler: api/getProductById/getProductById.handler
    events:
      - http:
          path: products/{id}
          method: get
          cors:
            origin: '*'
  createProduct:
    handler: api/createProduct/createProduct.handler
    events:
      - http:
          path: products
          method: post
          cors:
            origin: '*'
resources:
  Resources:
    Products:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Products
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    Stocks:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Stocks
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
